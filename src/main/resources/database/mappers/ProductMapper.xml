<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lsw.app.product.ProductDAO">

	<select id="getList" parameterType="Pager" resultType="ProductDTO"> <!-- mybatis-config에서 com.lsw.app.product.ProductDTO의 별칭을 ProductDTO 설정했음 -->
  		SELECT * FROM
			(SELECT ROWNUM R, B.* FROM
					(SELECT * FROM ITEMS
						<where>
							ITEM_ID > 0
							
							<choose>
								<when test="kind=='k2'">
									AND ITEM_DETAIL LIKE '%'||#{search}||'%'
								</when>
								<otherwise>
									AND ITEM_NAME LIKE '%'||#{search}||'%'
								</otherwise>
							</choose>
							
						</where>
						ORDER BY ITEM_ID DESC
					)B
			)
		WHERE R BETWEEN #{startRow} AND #{lastRow} 
  		<![CDATA[ ]]>
	</select>

	<select id="getDetail" parameterType="ProductDTO" resultMap="getDetailResult">
		SELECT I.*, PF.* 
  		FROM ITEMS I
  			 LEFT JOIN
  			 PRODUCTFILES PF 
  			 ON (I.ITEM_ID=PF.ITEM_ID)	
  		WHERE I.ITEM_ID = #{item_id}
	</select>
	
	<resultMap type="ProductDTO" id="getDetailResult">
  		<id column="ITEM_ID" property="item_id"/>
  		<result column="ITEM_NAME" property="item_name"/>
  		<result column="ITEM_DETAIL" property="item_detail"/>
  		<result column="ITEM_RATE" property="item_rate"/>
  		<collection property="fileDTOs" javaType="List" ofType="ProductFileDTO">
  			<id column="FILENUM" property="fileNum"/>
  			<result column="FILENAME" property="fileName"/>
  			<result column="ORINAME" property="oriName"/>
  		</collection>
  	</resultMap>
	
	


	<insert id="add" parameterType="ProductDTO">
		INSERT INTO ITEMS
		VALUES(#{item_id}, #{item_name}, #{item_detail}, #{item_rate})
	</insert>
	
	<select id="getNum" resultType="Long">
  		SELECT ITEM_ID_SEQ.NEXTVAL FROM DUAL
  	</select>
  	
  	<insert id="addFile" parameterType="ProductFileDTO">
  		INSERT INTO PRODUCTFILES
  		VALUES (#{item_id}, FILES_SEQ.NEXTVAL, #{fileName}, #{oriName})
  	</insert>
	

	<delete id="delete" parameterType="ProductDTO">
		DELETE ITEMS WHERE ITEM_ID=
		#{item_id}
	</delete>

	<update id="update" parameterType="ProductDTO">
		UPDATE ITEMS SET
		ITEM_ID=#{item_id}, ITEM_NAME=#{item_name},
		ITEM_DETAIL=#{item_detail}, ITEM_RATE=#{item_rate} WHERE
		ITEM_ID=#{item_id}
	</update>
	
	<select id="getTotalCount" parameterType="Pager" resultType="java.lang.Long">
		SELECT COUNT(ROWNUM) FROM ITEMS
			<where>
				ROWNUM > 0
							
				<choose>
					<when test="kind=='k2'">
						AND ITEM_DETAIL LIKE '%'||#{search}||'%'
					</when>
					<otherwise>
						AND ITEM_NAME LIKE '%'||#{search}||'%'
					</otherwise>
				</choose>	
			</where>
	</select>
	
	<insert id="commentAdd" parameterType="ProductCommentDTO">
		INSERT INTO COMMENTS
		VALUES
		(COMMENTS_SEQ.NEXTVAL, #{boardContents}, #{boardWriter}, #{item_id}, SYSDATE)
	</insert>
	
	
	<select id="commentList" parameterType="ProductCommentPager" resultType="ProductCommentDTO">
		SELECT * FROM
		(
			SELECT ROWNUM R, C.* FROM
			(
				SELECT * FROM COMMENTS
				WHERE ITEM_ID = #{item_id}
				ORDER BY BOARDNUM DESC
			) C
		)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	
	<select id="commentTotalCount" resultType="Long" parameterType="ProductCommentPager">
		SELECT COUNT(BOARDNUM) FROM COMMENTS
		WHERE ITEM_ID = #{item_id}
	</select>
	
	
  	<delete id="commentDelete" parameterType="ProductCommentDTO">
  		DELETE COMMENTS WHERE BOARDNUM = #{boardNum}
  	</delete>
	
	
	
</mapper>